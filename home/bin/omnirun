#!/usr/bin/env bash

# set -x
myself=$0
thisbn=$(basename "$0")
thispid=$$

errmsg () {
  echo "$@" >&2
}

export TMPFX=${thisbn}_${thispid}
finish () {
    # echo Wiping out temp files >&2
    rm /tmp/${TMPFX}* 2>/dev/null
}

trap finish  exit

t0b () {
    # returns filename of a dynamically created tmp file
    echo $(mktemp "/tmp/${TMPFX}.XXXXXX")
}

# set -x
ACT=${1:-none}

BODY=$(t0b)
if [[ ${ACT} != interactive ]]; then
  # ifne from moreutils. only runs next command when stdin is not empty
  cat - >"${BODY}"
  [[ -s "${BODY}" ]] || { errmsg  "No content to handle provided" ; exit 1; }
  HEADER=$(cat ${BODY} | head -1 )
  # echo HEADER is $HEADER
  # echo ARGS: "$@"
else
  echo $ACT>${BODY}
fi



interactive  () {
  sqp $sqlplusconn
}


ssql () {
  local B2
  B2=$(t0b)
  B3=$(t0b)
  cat $BODY | 
  sed '/^\s*--.*/d' | sed 's/ --.*$//' |
  sed -e ':a' -e '/^\n*$/{$d;N;};/\n$/ba'|
  sed '$s/[[:space:]]*$//g' >$B2
  # Delete all trailing blank lines at end of file (only) then any trailing space on the last line

  # cat $B2
  # return 0
  # tput rmam
  # stty cols 333
  cat $B2 | jsql ${dbconn?"No db connect string. expected: usr/pwd@host/sid"} | sed '/^\..\..*>/d' 
  # tput smam
}

sqlp () {
  # tput rmam
  cat $BODY | sqp -s ${sqlplusconn?"No db connect string. expected: usr/pwd@host/sid"}
  # tput smam
}

if [[ ${2:-none} =~ ^(.+)\/(.+)\@(.+)\/(.*)$ ]] ; then
  # echo Using connection string: $CST
  U=${BASH_REMATCH[1]}
  P=${BASH_REMATCH[2]}
  H=${BASH_REMATCH[3]}
  S=${BASH_REMATCH[4]}
  PWD=$(KRPWDE ${U}@${H}/${S})
  [ ${PWD:-none} != none ] && P=$PWD
  dbconn=${U}/${P}@${H}/${S}
  if [ ${U^^} == SYS ] ; then 
    sqlplusconn="${dbconn} as sysdba"
  else 
    sqlplusconn="${dbconn}"
  fi 
else
  dbconn=$2
fi



case ${ACT:-haste} in
haste)
    cat $BODY | haste
;;
interactive)
    interactive
;;
ssql)
    time ssql $BODY
;;
sqlp)
    time sqlp $BODY
;;
esac

