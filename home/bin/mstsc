#!/bin/bash

set -x


defuser=${CORPUSER?"Unspecified CORP user"}
udefdomain=${CORPDOMAIN?"Unspecified CORP domain"}

uh=${1?"host/user not specified"}
u=$(echo $uh|awk -F / '{ print $2 }')
u=${u:-${defuser}@${udefdomain}}
h=$(echo $uh|awk -F / '{ print $1 }')

RDPHOST=$(echo $h|awk -F : '{ print $1 }')
RDPPORT=$(echo $h|awk -F : '{ print $2 }')
RDPPORT=${RDPPORT:-3389}

nfy ()
{
  local lM=${1:-"Empty message"}
  echo $lM
  notify-send "$lM" "Notify" -t 4000
}


tcping $RDPHOST $RDPPORT || {  nfy "NO SERVICE ACCESSIBLE/AVAILABLE on $RDPHOST:$RDPPORT"; exit 1; }


echo u=$u

P2=$2
# geo size can be specified as 2nd param, otherwise it is caluclatted to be optimal based on i3 
if  [ ! -z "$P2" ]; then 
  GOPT="$P2"
else
  GOPT="$(RDGEO) "
fi

echo Getting KR password for user [$u]
p=$(KRPWD $u)
#echo Got p =$p=
#p=$(sed 's/#/\\#/g' <<<"$p") # otherwise hash interpreded as comment by shell which ruins cmd


[[ -z "$p" ]] && { 
 tmsg="Could not poll keyring for pass, tried user:  ${u}, You may want to specify domain name as user@domain"
 notify-send "$tmsg" "FAILURE" --urgency critical -t 0  
 echo "$tmsg"; exit 1
}

WTIT="rdesktop - $h/$u"
echo u=$u

EW=$(xdotool search --name "$WTIT")

[[ ! -z $EW ]] && { xdotool windowactivate --sync  $EW;  nfy "Existed $WTIT activated"; exit ; }

#rdesktop  -K -u "$u" -d $udomain $h -p "$p" -T "$WTIT" ${GOPT} -P -x m -E &

runcmd () {
 source <(echo $1)
}
runcmdTRM () {
 source <(echo jjterm  \"$1\") 
}

[[ $u = *"$CORPDOMAIN"* || $h = *"$CORPDOMAIN"* ]] && AUXOPT="/sec:rdp"
[[ $h = *js1* ]] && AUXOPT=

RDPCMD="xfreerdp +clipboard /size:$GOPT /u:'$u' /p:'$p'  /v:$h  /t:'$WTIT' -grab-keyboard ${AUXOPT}"
#echo Running cmd: "$RDPCMD"
runcmd "$RDPCMD"  &

sleep 0.5
RDPPID=$!

kill -0 $RDPPID || { 
  BGEXITCODE=$?
  [[ ! $BGEXITCODE -eq 0 ]] && { EXPLAIN=", Certificate not accepted?"; }
  runcmdTRM "$RDPCMD" || { nfy "RDP start failed , EXIT CODE is $BGEXITCODE $EXPLAIN "; exit 2; }
}

SecPass=0

until [[ ! -z $(xdotool search --name "$WTIT") ]]
do 
 echo Have been waiting for window for $SecPass second by now
 sleep 1
 (( SecPass ++ ))
 [[ $SecPass -gt ${TimeOut:-16} ]] && { nfy "Timed out to wait for window titled $WTIT"; exit; } 
done 


xdotool windowactivate --sync $(xdotool search --name "$WTIT")
sleep 1
xdotool key Return
sleep 1
notify-send "Sending RDP keys" "UNSTICK" -t 600 
xdotool key Super_L
xdotool key Ctrl
xdotool key Super_L
xdotool key Ctrl

